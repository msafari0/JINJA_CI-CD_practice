<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=0.8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"/>
    <title>Bar chart</title>
</head>
<body>

<canvas id="myChart"></canvas>

<script>
   //# Some nice colors from https://sashat.me/2017/01/11/list-of-20-simple-distinct-colors/
    //colors = ((230, 25, 75), (60, 180, 75), (255, 225, 25), (0, 130, 200), (245, 130, 48), (145, 30, 180), (70, 240, 240), (240, 50, 230), (210, 245, 60), (250, 190, 190), (0, 128, 128), (230, 190, 255), (170, 110, 40), (255, 250, 200), (128, 0, 0), (170, 255, 195), (128, 128, 0), (255, 215, 180))
    // Use triple curly braces to prevent Jinja from escaping characters
    const jsonData = {{ dataframe | load_csv_data | tojson | safe }};
    const nodes = jsonData['{{ Lx_axis }}'].map(String);
    const data1 = jsonData['{{ Lcolumn_name }}'];
    const ctx = document.getElementById('myChart').getContext('2d');
    {% if Lcomponent == 'empty' %}
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: nodes,
                datasets: [
                    {
                        label: '{{ Lcolumn_name }}',
                        data: data1,
                        backgroundColor: 'rgba(230, 25, 75, 0.7)',
                    },
                ],
            },
            options: {
                scales: {
                    x: {
                        stacked: true
                    },
                    y: {
                        stacked: true
                    }
                }
            },
        });
    {% else %}
        const data2 = {{ component | to_list | tojson | safe }};
        const data3 = {{ other_comp | to_list | tojson | safe }};
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: nodes,
                datasets: [
                    {
                        label: '{{ Lcomponent }}',
                        data: data2,
                        backgroundColor: 'rgba(60, 180, 75, 0.7)',
                    },
                   {
                        label: 'other components in {{ Lcolumn_name }}',
                        data: data3,
                        backgroundColor: 'rgba(145, 30, 180, 0.7)',
                    },
                ],
            },
            options: {
                scales: {
                    x: {
                        stacked: true
                    },
                    y: {
                        stacked: true
                    }
                }
            },
        });
    {% endif %}
</script>
</body>
</html>

</body>
</html>

